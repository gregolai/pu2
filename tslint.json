{
	"extends": [
		"tslint:recommended",
		"tslint-config-standard",
		"tslint-etc",
		"tslint-react",
		"tslint-config-prettier"
	],
	"rules": {
		// types related rules
		"no-inferrable-types": true,
		"no-namespace": {
			"options": ["allow-declarations"]
		},
		"interface-name": {
			"options": "never-prefix"
		},
		"no-unsafe-any": true,
		// core lint rules
		"ban": {
			"options": [
				{
					"name": ["describe", "only"],
					"message": "don't focus spec blocks"
				},
				{
					"name": ["it", "only"],
					"message": "don't focus tests"
				}
			]
		},
		"file-name-casing": {
			"options": ["kebab-case"]
		},

		"match-default-export-name": true,
		"newline-before-return": true,
		"no-boolean-literal-compare": true,
		"no-invalid-template-strings": true,
		"no-invalid-this": {
			"options": "check-function-in-method"
		},
		"no-parameter-reassignment": true,
		"no-require-imports": true,
		"one-variable-per-declaration": false,
		"ordered-imports": true,
		"prefer-template": true,
		"strict-type-predicates": false,
		"switch-default": true,
		// tslint:recommended overrides
		"member-access": {
			"options": ["no-public"]
		},
		"object-literal-sort-keys": false,
		"interface-over-type-literal": false,
		// tslint:tslint-config-standard overrides
		//
		// tslint-etc rules
		"no-unused-declaration": true,
		"no-dtslint-typo": true,
		"no-assign-mutated-array": true,
		// tslint-react rules
		"jsx-boolean-value": {
			"options": "never"
		}
	},
	// apply the same rules for any JS if allowJS is gonna be used
	"jsRules": true
}
