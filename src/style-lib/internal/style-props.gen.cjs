const fs = require('fs');
const path = require('path');

const shorthands = {
	bg: ['background'],
	b: ['border'],
	bt: ['borderTop'],
	br: ['borderRight'],
	bb: ['borderBottom'],
	bl: ['borderLeft'],
	bx: ['borderLeft', 'borderRight'],
	by: ['borderTop', 'borderBottom'],
	h: ['height'],
	m: ['margin'],
	mt: ['marginTop'],
	mr: ['marginRight'],
	mb: ['marginBottom'],
	ml: ['marginLeft'],
	my: ['marginTop', 'marginBottom'],
	mx: ['marginLeft', 'marginRight'],
	p: ['padding'],
	pt: ['paddingTop'],
	pr: ['paddingRight'],
	pb: ['paddingBottom'],
	pl: ['paddingLeft'],
	py: ['paddingTop', 'paddingBottom'],
	px: ['paddingLeft', 'paddingRight'],
	w: ['width']
};

const styleProps = [
	'additiveSymbols',
	'alignContent',
	'alignItems',
	'alignSelf',
	'all',
	'animation',
	'animationDelay',
	'animationDirection',
	'animationDuration',
	'animationFillMode',
	'animationIterationCount',
	'animationName',
	'animationPlayState',
	'animationTimingFunction',
	'backdropFilter',
	'backfaceVisibility',
	'background',
	'backgroundAttachment',
	'backgroundBlendMode',
	'backgroundClip',
	'backgroundColor',
	'backgroundImage',
	'backgroundOrigin',
	'backgroundPosition',
	'backgroundRepeat',
	'backgroundSize',
	'bleed',
	'blockSize',
	'border',
	'borderBlock',
	'borderBlockColor',
	'borderBlockEnd',
	'borderBlockEndColor',
	'borderBlockEndStyle',
	'borderBlockEndWidth',
	'borderBlockStart',
	'borderBlockStartColor',
	'borderBlockStartStyle',
	'borderBlockStartWidth',
	'borderBlockStyle',
	'borderBlockWidth',
	'borderBottom',
	'borderBottomColor',
	'borderBottomLeftRadius',
	'borderBottomRightRadius',
	'borderBottomStyle',
	'borderBottomWidth',
	'borderCollapse',
	'borderColor',
	'borderEndEndRadius',
	'borderEndStartRadius',
	'borderImage',
	'borderImageOutset',
	'borderImageRepeat',
	'borderImageSlice',
	'borderImageSource',
	'borderImageWidth',
	'borderInline',
	'borderInlineColor',
	'borderInlineEnd',
	'borderInlineEndColor',
	'borderInlineEndStyle',
	'borderInlineEndWidth',
	'borderInlineStart',
	'borderInlineStartColor',
	'borderInlineStartStyle',
	'borderInlineStartWidth',
	'borderInlineStyle',
	'borderInlineWidth',
	'borderLeft',
	'borderLeftColor',
	'borderLeftStyle',
	'borderLeftWidth',
	'borderRadius',
	'borderRight',
	'borderRightColor',
	'borderRightStyle',
	'borderRightWidth',
	'borderSpacing',
	'borderStartEndRadius',
	'borderStartStartRadius',
	'borderStyle',
	'borderTop',
	'borderTopColor',
	'borderTopLeftRadius',
	'borderTopRightRadius',
	'borderTopStyle',
	'borderTopWidth',
	'borderWidth',
	'bottom',
	'boxDecorationBreak',
	'boxShadow',
	'boxSizing',
	'breakAfter',
	'breakBefore',
	'breakInside',
	'captionSide',
	'caretColor',
	'clear',
	'clip',
	'clipPath',
	'color',
	'colorAdjust',
	'columnCount',
	'columnFill',
	'columnGap',
	'columnRule',
	'columnRuleColor',
	'columnRuleStyle',
	'columnRuleWidth',
	'columnSpan',
	'columnWidth',
	'columns',
	'contain',
	'content',
	'counterIncrement',
	'counterReset',
	'counterSet',
	'cursor',
	'direction',
	'display',
	'emptyCells',
	'fallback',
	'filter',
	'flex',
	'flexBasis',
	'flexDirection',
	'flexFlow',
	'flexGrow',
	'flexShrink',
	'flexWrap',
	'float',
	'font',
	'fontFamily',
	'fontFeatureSettings',
	'fontKerning',
	'fontLanguageOverride',
	'fontOpticalSizing',
	'fontSize',
	'fontSizeAdjust',
	'fontStretch',
	'fontStyle',
	'fontSynthesis',
	'fontVariant',
	'fontVariantAlternates',
	'fontVariantCaps',
	'fontVariantEastAsian',
	'fontVariantLigatures',
	'fontVariantNumeric',
	'fontVariantPosition',
	'fontVariationSettings',
	'fontWeight',
	'gap',
	'grid',
	'gridArea',
	'gridAutoColumns',
	'gridAutoFlow',
	'gridAutoRows',
	'gridColumn',
	'gridColumnEnd',
	'gridColumnStart',
	'gridRow',
	'gridRowEnd',
	'gridRowStart',
	'gridTemplate',
	'gridTemplateAreas',
	'gridTemplateColumns',
	'gridTemplateRows',
	'hangingPunctuation',
	'height',
	'hyphens',
	'imageOrientation',
	'imageRendering',
	'inlineSize',
	'inset',
	'insetBlock',
	'insetBlockEnd',
	'insetBlockStart',
	'insetInline',
	'insetInlineEnd',
	'insetInlineStart',
	'isolation',
	'justifyContent',
	'justifyItems',
	'justifySelf',
	'left',
	'letterSpacing',
	'lineBreak',
	'lineHeight',
	'listStyle',
	'listStyleImage',
	'listStylePosition',
	'listStyleType',
	'margin',
	'marginBlock',
	'marginBlockEnd',
	'marginBlockStart',
	'marginBottom',
	'marginInline',
	'marginInlineEnd',
	'marginInlineStart',
	'marginLeft',
	'marginRight',
	'marginTop',
	'mask',
	'maskBorder',
	'maskBorderMode',
	'maskBorderOutset',
	'maskBorderRepeat',
	'maskBorderSlice',
	'maskBorderSource',
	'maskBorderWidth',
	'maskClip',
	'maskComposite',
	'maskImage',
	'maskMode',
	'maskOrigin',
	'maskPosition',
	'maskRepeat',
	'maskSize',
	'maskType',
	'maxBlockSize',
	'maxHeight',
	'maxInlineSize',
	'maxWidth',
	'minInlineSize',
	'minHeight',
	'minWidth',
	'mixBlendMode',
	'objectFit',
	'objectPosition',
	'offset',
	'offsetAnchor',
	'offsetDistance',
	'offsetPath',
	'offsetRotate',
	'opacity',
	'order',
	'orphans',
	'outline',
	'outlineColor',
	'outlineOffset',
	'outlineStyle',
	'outlineWidth',
	'overflow',
	'overflowAnchor',
	'overflowBlock',
	'overflowInline',
	'overflowWrap',
	'overflowX',
	'overflowY',
	'overscrollBehavior',
	'overscrollBehaviorBlock',
	'overscrollBehaviorInline',
	'overscrollBehaviorX',
	'overscrollBehaviorY',
	'padding',
	'paddingBlock',
	'paddingBlockEnd',
	'paddingBlockStart',
	'paddingBlockBottom',
	'paddingBlockInline',
	'paddingBlockInlineEnd',
	'paddingBlockInlineStart',
	'paddingBottom',
	'paddingLeft',
	'paddingRight',
	'paddingTop',
	'pageBreakAfter',
	'pageBreakBefore',
	'pageBreakInside',
	'paintOrder',
	'perspective',
	'perspectiveOrigin',
	'placeContent',
	'placeItems',
	'placeSelf',
	'pointerEvents',
	'position',
	'quotes',
	'resize',
	'right',
	'rowGap',
	'scrollBehavior',
	'scrollMargin',
	'scrollMarginBlock',
	'scrollMarginBlockEnd',
	'scrollMarginBlockStart',
	'scrollMarginBottom',
	'scrollMarginInline',
	'scrollMarginInlineEnd',
	'scrollMarginInlineStart',
	'scrollMarginLeft',
	'scrollMarginRight',
	'scrollMarginTop',
	'scrollPadding',
	'scrollPaddingBlock',
	'scrollPaddingBlockEnd',
	'scrollPaddingBlockStart',
	'scrollPaddingBottom',
	'scrollPaddingInline',
	'scrollPaddingInlineEnd',
	'scrollPaddingInlineStart',
	'scrollPaddingLeft',
	'scrollPaddingRight',
	'scrollPaddingTop',
	'scrollSnapAlign',
	'scrollSnapStop',
	'scrollSnapType',
	'scrollbarColor',
	'scrollbarWidth',
	'shapeImageThreshold',
	'shapeMargin',
	'shapeOutside',
	'tabSize',
	'tableLayout',
	'textAlign',
	'textAlignLast',
	'textCombineUpright',
	'textDecoration',
	'textDecorationColor',
	'textDecorationLine',
	'textDecorationSkipInk',
	'textDecorationStyle',
	'textDecorationThickness',
	'textEmphasis',
	'textEmphasisColor',
	'textEmphasisPosition',
	'textEmphasisStyle',
	'textIndent',
	'textJustify',
	'textOrientation',
	'textOverflow',
	'textRendering',
	'textShadow',
	'textTransform',
	'textUnderlineOffset',
	'textUnderlinePosition',
	'top',
	'touchAction',
	'transform',
	'transformBox',
	'transformOrigin',
	'transformStyle',
	'transition',
	'transitionDelay',
	'transitionDuration',
	'transitionProperty',
	'transitionTimingFunction',
	'unicodeBidi',
	'userSelect',
	'verticalAlign',
	'visibility',
	'whiteSpace',
	'widows',
	'width',
	'willChange',
	'wordBreak',
	'wordSpacing',
	'wordWrap',
	'writingMode',
	'zIndex',
	'zoom',
	'webkitFontSmoothing',
	'webkitMaskImage',
	'mozOsxFontSmoothing'
];

const thisDir = path.dirname(__filename);
const writeFile = (fileName, data) => {
	fs.writeFileSync(path.resolve(thisDir, fileName), data, 'utf-8');
};

writeFile(
	'style-props.generated.ts',
	`
export const shorthands = ${JSON.stringify(shorthands)};

export type StyleProps = {
	${styleProps.map((v) => `${v}: false | string;`).join(' ')}
	${Object.keys(shorthands)
		.map((v) => `${v}: false | string;`)
		.join(' ')}
};

const _set = new Set([
	${styleProps.map((v) => `'${v}',`).join('')}
	${Object.keys(shorthands)
		.map((v) => `'${v}'`)
		.join(',')}
]);

export const isStyleProp = (propName: string) => _set.has(propName);
`.trim()
);
